// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

/**
 * A comment on a post
 */
export class Comment {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Comment {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsComment(bb:flatbuffers.ByteBuffer, obj?:Comment):Comment {
  return (obj || new Comment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsComment(bb:flatbuffers.ByteBuffer, obj?:Comment):Comment {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Comment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

content():string|null
content(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
content(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

author():string|null
author(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
author(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

regards():string|null
regards(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
regards(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

createdAt():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startComment(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, contentOffset, 0);
}

static addAuthor(builder:flatbuffers.Builder, authorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, authorOffset, 0);
}

static addRegards(builder:flatbuffers.Builder, regardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, regardsOffset, 0);
}

static addCreatedAt(builder:flatbuffers.Builder, createdAt:bigint) {
  builder.addFieldInt64(4, createdAt, BigInt('0'));
}

static endComment(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createComment(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, contentOffset:flatbuffers.Offset, authorOffset:flatbuffers.Offset, regardsOffset:flatbuffers.Offset, createdAt:bigint):flatbuffers.Offset {
  Comment.startComment(builder);
  Comment.addId(builder, idOffset);
  Comment.addContent(builder, contentOffset);
  Comment.addAuthor(builder, authorOffset);
  Comment.addRegards(builder, regardsOffset);
  Comment.addCreatedAt(builder, createdAt);
  return Comment.endComment(builder);
}
}
