import { NormalizedSchema } from "../../parser/types.js";
import { IGenerator } from "./interface.js";
import { toKebabCase } from "../utils.js";

export class ImportGenerator
  implements IGenerator<{ importExtension?: string }>
{
  generate(
    schemas: NormalizedSchema[],
    options?: { importExtension?: string }
  ): string {
    const importExt = options?.importExtension ?? ".js";

    const schemaImports = schemas
      .filter((s) => !s.isJoinTable)
      .map((s) => {
        return `import * as ${s.name}FB from './schema/${toKebabCase(
          s.name
        )}${importExt}';`;
      })
      .join("\n");

    return `// @ts-nocheck
// This file is generated by @zgdb/zg. Do not edit it manually.
// TODO: Generate based on the user's config
import { ZgDatabase, ZgBaseNode, ZgAuthContext, EntityCollection } from '@zgdb/client';
import { Builder, ByteBuffer } from 'flatbuffers';
${schemaImports}
`;
  }
}
