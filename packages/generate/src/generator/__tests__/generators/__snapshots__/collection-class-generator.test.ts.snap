// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CollectionClassGenerator > should generate correct collection classes 1`] = `
"// --- Collection Classes ---
export class UserCollection<TActor> {
    constructor(
      private db: ZgDatabase,
      private authContext: ZgAuthContext<TActor> | null
    ) {}

    get collectionName(): string {
      return 'User';
    }

    create(data: CreateUserInput): UserNode<TActor> {
      const builder = new Builder(1024);
      
          const displayNameOffset = data.displayName ? builder.createString(data.displayName) : 0;
    const idOffset = data.id ? builder.createString(data.id) : 0;
      

      UserFB.User.startUser(builder);
      
      UserFB.User.addCreatedAt(builder, data.createdAt ?? null);
    UserFB.User.addDisplayName(builder, displayNameOffset ?? 0);
    UserFB.User.addId(builder, idOffset ?? 0);

      const entityOffset = UserFB.User.endUser(builder);
      
      builder.finish(entityOffset);
      const buffer = builder.asUint8Array();

      this.db.insert(this.collectionName, data.id, buffer);

      const fbb = UserFB.User.getRootAsUser(new ByteBuffer(buffer));

      return new UserNode<TActor>(
        this.db,
        fbb,
        this.authContext,
      );
    }

    *[Symbol.iterator](): Generator<UserNode<TActor>> {
      for (const [id, buffer] of this.db.scan(this.collectionName)) {
        const fbb = UserFB.User.getRootAsUser(new ByteBuffer(buffer));
        yield new UserNode<TActor>(
          this.db,
          fbb,
          this.authContext,
        );
      }
    }
  }"
`;
