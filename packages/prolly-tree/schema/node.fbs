// @zgdb/prolly-tree/schema/node.fbs

namespace Zgdb.ProllyTree;

// A key-value pair for leaf nodes.
table KeyValuePair {
  key:[ubyte] (required);
  value:[ubyte] (required);
}

// A branch for internal nodes, pointing to a child.
table Branch {
  // The key is the separator for the child node.
  // It represents the upper bound of the keys in the child's subtree.
  key:[ubyte] (required);
  address:[ubyte] (required);
}

// A leaf node contains a sorted list of key-value pairs.
table LeafNode {
  pairs:[KeyValuePair] (required);
}

// An internal node contains a sorted list of branches.
table InternalNode {
  branches:[Branch] (required);
}

// A union to represent either a LeafNode or an InternalNode.
union NodeBody {
  LeafNode,
  InternalNode
}

// The main Node table that wraps the node type and its data.
table Node {
  level:uint; // 0 for leaf, > 0 for internal
  entry_count:uint; // Total number of entries in the subtree rooted at this node.
  body:NodeBody;
}

root_type Node; 