// @zgdb/prolly-tree/schema/node.fbs

namespace Zgdb.ProllyTree;

// A wrapper for a key byte array.
table Key {
  key:[ubyte];
}

// A wrapper for a value byte array.
table Value {
  value:[ubyte];
}

// A wrapper for an address byte array.
table Address {
  address:[ubyte];
}

// A leaf node contains parallel arrays of keys and values.
table LeafNode {
  keys:[Key];
  values:[Value];
}

// An internal node contains separator keys and pointers to child node addresses.
table InternalNode {
  // There are N keys and N+1 addresses.
  // The keys are separators for the child nodes.
  // The last address corresponds to the rightmost child and has no upper-bound key in this node.
  keys:[Key];
  addresses:[Address];
}

// A union to represent either a LeafNode or an InternalNode.
union NodeBody {
  LeafNode,
  InternalNode
}

// The main Node table that wraps the node type and its data.
table Node {
  level:uint; // 0 for leaf, > 0 for internal
  entry_count:uint; // Total number of entries in the subtree rooted at this node.
  body:NodeBody;
}

root_type Node; 