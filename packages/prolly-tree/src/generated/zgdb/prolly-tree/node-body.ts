// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { InternalNode } from '../../zgdb/prolly-tree/internal-node.js';
import { LeafNode } from '../../zgdb/prolly-tree/leaf-node.js';


export enum NodeBody {
  NONE = 0,
  LeafNode = 1,
  InternalNode = 2
}

export function unionToNodeBody(
  type: NodeBody,
  accessor: (obj:InternalNode|LeafNode) => InternalNode|LeafNode|null
): InternalNode|LeafNode|null {
  switch(NodeBody[type]) {
    case 'NONE': return null; 
    case 'LeafNode': return accessor(new LeafNode())! as LeafNode;
    case 'InternalNode': return accessor(new InternalNode())! as InternalNode;
    default: return null;
  }
}

export function unionListToNodeBody(
  type: NodeBody, 
  accessor: (index: number, obj:InternalNode|LeafNode) => InternalNode|LeafNode|null, 
  index: number
): InternalNode|LeafNode|null {
  switch(NodeBody[type]) {
    case 'NONE': return null; 
    case 'LeafNode': return accessor(index, new LeafNode())! as LeafNode;
    case 'InternalNode': return accessor(index, new InternalNode())! as InternalNode;
    default: return null;
  }
}
