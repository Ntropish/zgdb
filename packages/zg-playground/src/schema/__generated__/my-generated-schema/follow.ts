// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

/**
 * A directional relationship indicating one user follows another.
 */
export class Follow {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Follow {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFollow(bb:flatbuffers.ByteBuffer, obj?:Follow):Follow {
  return (obj || new Follow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFollow(bb:flatbuffers.ByteBuffer, obj?:Follow):Follow {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Follow()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

followerId():string|null
followerId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
followerId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

followingId():string|null
followingId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
followingId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

createdAt():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

mutate_createdAt(value:bigint):boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb!.writeInt64(this.bb_pos + offset, value);
  return true;
}

static startFollow(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addFollowerId(builder:flatbuffers.Builder, followerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, followerIdOffset, 0);
}

static addFollowingId(builder:flatbuffers.Builder, followingIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, followingIdOffset, 0);
}

static addCreatedAt(builder:flatbuffers.Builder, createdAt:bigint) {
  builder.addFieldInt64(3, createdAt, BigInt('0'));
}

static endFollow(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFollow(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, followerIdOffset:flatbuffers.Offset, followingIdOffset:flatbuffers.Offset, createdAt:bigint):flatbuffers.Offset {
  Follow.startFollow(builder);
  Follow.addId(builder, idOffset);
  Follow.addFollowerId(builder, followerIdOffset);
  Follow.addFollowingId(builder, followingIdOffset);
  Follow.addCreatedAt(builder, createdAt);
  return Follow.endFollow(builder);
}
}
