// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

/**
 * A comment on a post
 */
export class Comment {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Comment {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsComment(bb:flatbuffers.ByteBuffer, obj?:Comment):Comment {
  return (obj || new Comment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsComment(bb:flatbuffers.ByteBuffer, obj?:Comment):Comment {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Comment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

authorId():string|null
authorId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
authorId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

content():string|null
content(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
content(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

createdAt():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

mutate_createdAt(value:bigint):boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb!.writeInt64(this.bb_pos + offset, value);
  return true;
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

postId():string|null
postId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
postId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startComment(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addAuthorId(builder:flatbuffers.Builder, authorIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, authorIdOffset, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, contentOffset, 0);
}

static addCreatedAt(builder:flatbuffers.Builder, createdAt:bigint) {
  builder.addFieldInt64(2, createdAt, BigInt('0'));
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, idOffset, 0);
}

static addPostId(builder:flatbuffers.Builder, postIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, postIdOffset, 0);
}

static endComment(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createComment(builder:flatbuffers.Builder, authorIdOffset:flatbuffers.Offset, contentOffset:flatbuffers.Offset, createdAt:bigint, idOffset:flatbuffers.Offset, postIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  Comment.startComment(builder);
  Comment.addAuthorId(builder, authorIdOffset);
  Comment.addContent(builder, contentOffset);
  Comment.addCreatedAt(builder, createdAt);
  Comment.addId(builder, idOffset);
  Comment.addPostId(builder, postIdOffset);
  return Comment.endComment(builder);
}
}
